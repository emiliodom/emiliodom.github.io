name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # No need to generate nocodb-config.js anymore!
      # The Cloudflare Worker proxy handles authentication securely
      # The nocodb-config.js file in the repo is already configured to use the worker

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm install --global terser cssnano-cli postcss

      - name: Minify JavaScript
        run: |
          find assets/js -name "*.js" ! -name "*.min.js" -type f -exec sh -c '
            for file do
              dir=$(dirname "$file")
              base=$(basename "$file" .js)
              terser "$file" -c -m -o "$dir/$base.min.js"
            done
          ' sh {} +

      - name: Minify CSS
        run: |
          find assets/css -name "*.css" ! -name "*.min.css" -type f -exec sh -c '
            for file do
              dir=$(dirname "$file")
              base=$(basename "$file" .css)
              cssnano "$file" "$dir/$base.min.css"
            done
          ' sh {} +

      - name: Update HTML to use minified assets
        run: |
          # Replace .js with .min.js and .css with .min.css in HTML files
          find . -name "*.html" -type f -exec sed -i 's/\.js"/\.min.js"/g; s/\.css"/\.min.css"/g' {} +
          # Fix cases where we don't want minification (external CDN links)
          find . -name "*.html" -type f -exec sed -i 's/\.min\.min\.js/.min.js/g; s/\.min\.min\.css/.min.css/g' {} +

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
